name: 'Allure Results Combiner and Publisher'
description: 'Combines Allure results from matrix jobs, generates a unified report, and publishes it to GitHub Pages'
author: 'Your Name'
branding:
  icon: 'bar-chart-2'
  color: 'green'

inputs:
  github-token:
    description: 'GitHub token for publishing to GitHub Pages'
    required: true
  results-pattern:
    description: 'Pattern to match when downloading Allure results artifacts'
    required: false
    default: 'allure-results-*'
  results-directory:
    description: 'Directory where combined Allure results will be stored'
    required: false
    default: 'combined-allure-results'
  report-directory:
    description: 'Directory where the Allure report will be generated'
    required: false
    default: 'allure-report'
  history-directory:
    description: 'Directory for Allure history'
    required: false
    default: 'allure-history'
  gh-pages:
    description: 'Directory for GitHub Pages'
    required: false
    default: 'gh-pages'
  gh-pages-branch:
    description: 'Branch for GitHub Pages'
    required: false
    default: 'gh-pages'
  report-title:
    description: 'Title for the Allure report'
    required: false
    default: 'Allure Test Report'
  retention-days:
    description: 'Number of days to retain the Allure report artifact'
    required: false
    default: '14'
  publish-to-pages:
    description: 'Whether to publish the report to GitHub Pages'
    required: false
    default: 'true'
  process-results:
    description: 'Custom script to process the Allure report results'
    required: false
    default: ''
  fail-on-empty-results:
    description: 'Whether to fail if no Allure results are found'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      shell: bash

    - name: Download all Allure Results
      uses: actions/download-artifact@v4
      with:
        path: download-results
        pattern: ${{ inputs.results-pattern }}
      shell: bash

    - name: Merge Allure Results
      run: |
        echo "Merging Allure results..."
        mkdir -p ${{ inputs.results-directory }}

        # Use rsync to merge all results
        rsync -av --ignore-existing download-results/*/ ${{ inputs.results-directory }}/

        # Count total files to verify results
        TOTAL_FILES=$(find ${{ inputs.results-directory }} -type f | wc -l)
        echo "Total files in combined results: $TOTAL_FILES"

        # Fail if no results found and fail-on-empty-results is true
        if [ "$TOTAL_FILES" -eq 0 ] && [ "${{ inputs.fail-on-empty-results }}" = "true" ]; then
          echo "No Allure results found. Exiting with error."
          exit 1
        fi
      shell: bash

    - name: Load test report history
      if: inputs.publish-to-pages == 'true'
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.gh-pages-branch }}
        path: ${{ inputs.gh-pages }}
      shell: bash
      continue-on-error: true

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.11
      with:
        gh_pages: ${{ inputs.gh-pages }}
        allure_results: ${{ inputs.results-directory }}
        allure_history: ${{ inputs.history-directory }}
        allure_report: ${{ inputs.report-directory }}
        allure_title: ${{ inputs.report-title }}
      shell: bash

    - name: Upload Allure report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: ${{ inputs.report-directory }}
        if-no-files-found: warn
        retention-days: ${{ inputs.retention-days }}
      shell: bash

    - name: Deploy report to GitHub Pages
      if: inputs.publish-to-pages == 'true'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ inputs.github-token }}
        publish_branch: ${{ inputs.gh-pages-branch }}
        publish_dir: ${{ inputs.history-directory }}
      shell: bash

    - name: Process report results
      if: inputs.process-results != ''
      run: |
        if [ -f "./${{ inputs.report-directory }}/widgets/summary.json" ]; then
          echo "Processing report summary using custom script: ${{ inputs.process-results }}"
          ${{ inputs.process-results }} ./${{ inputs.report-directory }}/widgets/summary.json
        else
          echo "No summary.json found in the report or no custom processing script provided."
        fi
      shell: bash